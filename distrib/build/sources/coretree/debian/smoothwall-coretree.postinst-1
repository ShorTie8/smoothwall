#!/bin/sh
# SmoothWall Build system.
#
# Parts (c) SmoothWall Ltd 2005
# Parts (c) Neal P. Murphy 2009-2020
# Parts (c) Jeff Blanner 2020
#
# This code is distributed under the terms of the GPL v2.
#
# cp -v /etc/udev/rules.d/70-Smoothwall-custom-NIC.rules /var/run/udev/tmp-rules--70-persistent-net.rules

# Define message colors.
export BOUL="\033[1;34m"	    # light blue
export OOPS="\033[1;31m"    # red
export DONE="\033[1;32m"    # green
export INFO="\033[1;33m"    # yellow
export STEP="\033[1;34m"    # blue
export WARN="\033[1;35m"    # hot pink
export LTBL="\033[1;36m"	# light blue
export NO="\033[0m"         # normal/light

ETH_port="`ip addr | grep 192 | cut -d" " -f13`"
IP_addr="`ip addr | grep 192 | cut -d" " -f6 | cut -d"/" -f1`"
ServerName=`cat /var/smoothwall/main/hostname.conf | cut -d " " -f2`
NET_addr="`ip addr | grep 192 | cut -d" " -f6 | cut -d"." -f1`.`ip addr | grep 192 | cut -d" " -f6 | cut -d"." -f2`.`ip addr | grep 192 | cut -d" " -f6 | cut -d"." -f3`"

echo; echo "${BOUL}  Postinstall for \033[1;33m express  ${ServerName} ${IP_addr} ${ETH_port}  ${NO}"

# Kernel version, passed in during build process
#Krn_ver=5.4.48
#Kernel_Version=$(Krn_ver)
#UUID=$(grep "UUID" /etc/fstab | grep "02" | cut -d" " -f1 | awk '{print$1}')
#UUID=$(shell grep "UUID" /etc/fstab | grep "02" | cut -d" " -f1 | awk '{print$1}')
#arch=$(uname -m)



echo "${BOUL}    Setting kernel  ${NO}"
#echo $(uname -r) > /var/smoothwall/main/kernel

echo "      Using kernel stuff, cat /var/smoothwall/main/kernel "; cat /var/smoothwall/main/kernel




echo "${BOUL}    Adjusting  ethernet/settings, ${IP_addr} ${ETH_port}  ${NO}"
echo "GREEN_DEV=${ETH_port}" >> /var/smoothwall/ethernet/settings
echo "GREEN_NETADDRESS=${NET_addr}.0" >> /var/smoothwall/ethernet/settings
echo "GREEN_ADDRESS=${IP_addr}" >> /var/smoothwall/ethernet/settings
echo "GREEN_NETMASK=255.255.255.0" >> /var/smoothwall/ethernet/settings
echo "GREEN_BROADCAST=${NET_addr}.255" >> /var/smoothwall/ethernet/settings
cat /var/smoothwall/ethernet/settings



echo -n "${INFO}          Devices in /sys/class/net are${NO}"
echo -n "${DONE}      "; ls /sys/class/net; echo -n "${NO}"


echo  "${BOUL}    Executing installer${NO}"
cp -v /etc/udev/rules.d/70-Smoothwall-custom-NIC.rules /var/run/udev/tmp-rules--70-persistent-net.rules
/usr/bin/installer/eth-addr-sort
echo  "${DONE}    Finished Executing installer${NO}"


#if [ ! -f /etc/udev/rules.d/70-Smoothwall-custom-NIC.rules ]; then
#  echo " \033[1;34m    Creating /etc/udev/rules.d/70-Smoothwall-custom-NIC.rules  \033[0m "
#  /usr/bin/installer/eth-addr-sort
#  touch /root/freshinstall
#else
#  echo " \033[1;34m    Doing update  \033[0m "
#  touch /root/update
#fi

if [ ! -f /etc/udev/rules.d/70-Smoothwall-custom-disk.rules ]; then
  echo " \033[1;34m    Creating /etc/udev/rules.d/\033[1;32m70-Smoothwall-custom-disk.rules  \033[0m "
  if [ "$(uname -m)" = aarch64 ]; then 
    /usr/bin/installer/prepHDudevrule mmcblk0
  else
    /usr/bin/installer/prepHDudevrule sda
  fi
  cp -v /etc/udev/rules.d/70-Smoothwall-custom-disk.rules /var/smoothwall/custom-disk.rules
  touch /var/smoothwall/freshinstall
fi



#GREEN_BRG=!
#GREEN_DEV=eth1
#GREEN_NETADDRESS=192.168.32.0
#GREEN_ADDRESS=192.168.32.1
#GREEN_BROADCAST=192.168.32.255
#GREEN_NETMASK=255.255.255.0
	#echo "" >> /var/smoothwall/ethernet/settings
	#echo "" >> /var/smoothwall/ethernet/settings
echo "${BOUL}    Creating hosts file && symlink, )  ${NO}"
cp -v /etc/hosts /etc/hosts.backup
sed -i /var/smoothwall/hosts/hosts -e "s/IP_addr/${IP_addr}/"
cat /var/smoothwall/hosts/hosts
cd /etc; ln -svf /var/smoothwall/hosts/hosts hosts


echo " \033[1;34m    Generate $HOSTNAME keys/certs as needed for ${ServerName}  \033[0m "
#if [ ! -e /etc/httpd/conf/server.key ]; then
        echo " \033[1;34m    Hash CA certs  \033[0m "
        /usr/bin/openssl genrsa -rand \
		/boot/vmlinuz-`uname -r`:/var/smoothwall/ethernet/settings:/var/log/dmesg -out \
		/etc/httpd/server.key 2048
		
		echo " \033[1;34m    CSR  \033[0m "
        sed -e "6 s/Smoothwall/$HOSTNAME/" /etc/certparams | /usr/bin/openssl \
		req -new -key /etc/httpd/server.key -out /etc/httpd/server.csr
		
		echo; echo " \033[1;34m    Signing certificate  \033[0m "
	/usr/bin/openssl x509 -req -days 999999 -in \
		/etc/httpd/server.csr -signkey /etc/httpd/server.key -out \
		/etc/httpd/server.crt
#fi	

echo " \033[1;34m    Hash CA certs  \033[0m "
/usr/bin/c_rehash >/dev/null


exit 0 




if [ "$(uname -m)" = x86_64 ]; then

echo; echo " \033[1;34m    Postinstall for SmoothWall Linux-$(Kernel_Version) for amd64/x86_64 \033[0m "

if [ ! grep SmoothWall /boot/grub/grub.conf ]; then
	cp -v /boot/grub/grub.conf /boot/grub/grub.conf.orig

# From /usr/bin/installer/writegrubconf

# Write the config

	tee /boot/grub/grub.conf <<END
#
#
# Begin /boot/grub/grub.conf
# From /usr/bin/installer/writegrubconf

# SmoothWall Build system.

# Set up to output to both VGA console and serial port; grub'll
#   use the first one to see a keypress. Or it'll time out and
#   use the default from installation (the first one in the command).
#   Change the order of them if you manually change between serial
#   and vesa.

# See media/installroot/etc/exec-install.rc.src for full grub.conf

# For SWE3.1, use only VESA with the binary installer
# Preparing the serial console requires the Advanced Installer

terminal console

default 0

# Allow 10 seconds before booting the default.
timeout 5

# Official backdrop
splashimage=/grub/express_boot_protect.xpm.gz
foreground=cfcfcf
background=222222

# Boot using VESA console
title Smoothwall Express (VESA Console)
root (hd0,0)
#kernel /vmlinuz-${Kernel_Version}${KERNEL_TYPE} root=/dev/harddisk4 ro quiet
kernel /vmlinuz-${Kernel_Version}${KERNEL_TYPE} root=$(UUID) ro quiet
#initrd /initrd-${Kernel_Version}${KERNEL_TYPE}.gz
#init=/etc/inittab-swe

# Try to boot VESA console using kernel params to work around odd hardware/firmware
title Smoothwall Express (VESA Console, Odd Hardware)
root (hd0,0)
#kernel /vmlinuz-${Kernel_Version}${KERNEL_TYPE} root=/dev/harddisk4 ro quiet iommu=soft nomodeset
kernel /vmlinuz-${Kernel_Version}${KERNEL_TYPE} root=$(UUID) ro quiet iommu=soft nomodeset
#initrd /initrd-${Kernel_Version}${KERNEL_TYPE}.gz
#init=/etc/inittab-swe

END

#	###################################################################################

	tee /boot/grub/grub.cmds-swe <<END

#
# From /usr/bin/installer/installgrub

# Always install the boot loader whether installing, restoring var or
#   doing a total restore

# If $1 = "UPDATE", we're updating, so don't chroot.
#if [ "$1" = "UPDATE" ]; then
#  HARDDISK=
#  CHROOT=
#else
#  HARDDISK="/harddisk"
#  CHROOT="/sbin/chroot /harddisk "
#fi

#cat<<END >${HARDDISK}/tmp/grub.cmds
#cat<<END >/boot/grub/grub.cmds-swe
device (hd0) /dev/harddisk
root (hd0,0) 
setup (hd0) 
quit

# ${CHROOT}/usr/sbin/grub --batch <${HARDDISK}/tmp/grub.cmds || exit 1

END

else
	@echo; echo "  /boot/grub/grub.conf already has SmoothWall stuff .. :)~ "
	# update ??
fi


echo; echo " \033[1;34m   depmod -a \033[0m "
depmod -a

exit 0 







