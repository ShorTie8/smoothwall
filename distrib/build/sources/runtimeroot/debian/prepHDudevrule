#! /bin/bash

device=`basename $1`
echo "  device tis $device"

cd /sys/block

# Ensure 'serial' is blank to start with
serial=""

#UDEVINFO="/sbin/udevadm info --path=${PWD}/${device} --query=all"

if [ -e "${device}/device" ] || [[ "$device" =~ mmcblk[0-9]* ]]; then
      UDEVINFO="/sbin/udevadm info --path=${PWD}/${device} --query=all"
      ID_TYPE=`$UDEVINFO | grep ID_TYPE | sed -e 's/.*=//'`
fi

if [[ "$device" =~ sd[0-9]* ]]; then
  serial=`$UDEVINFO | grep ID_SERIAL_SHORT | sed -e 's/.*=//'`
elif [[ "$device" =~ mmcblk[0-9]* ]]; then
  echo "found sdcard $device"
  ID_TYPE="disk"
  model=`$UDEVINFO | grep ID_NAME | cut -d"=" -f2 | awk '{print$1}'`
  serial=`$UDEVINFO | grep ID_SERIAL | sed -e 's/.*=//'`
else
  echo "Unkown drive type"
  exit 1
fi

# First try ID_SERIAL_SHORT; if not found, 'serial' will remain blank. This should work for
#   all plain non-RAID SCSI and SATA/IDE drives
# serial=`$UDEVINFO | grep ID_SERIAL_SHORT | sed -e 's/.*=//'`

# Now try ID_SCSI; again, if not found, 'serial' will remain blank. This should set a 'serial #'
#   for the Fusion MPT driver, if not all SCSI RAID 'drives'.
[ -z "$serial" ] && serial=`$UDEVINFO | grep ID_SCSI | sed -e 's/.*=//'`

# If serial is still blank, neither ID_SERIAL_SHORT nor ID_SCSI are available.
if [ -z "$serial" ]; then
  # non-virtio disks
  [ -f "${device}/device/serial" ] && serial=`cat ${device}/device/serial 2>&1 | sed -e 's/ /-/g'`
  # virtio disks don't follow the custom
  [ -f "${device}/serial" ] && serial=`cat ${device}/serial 2>&1 | sed -e 's/ /-/g'`
fi

# The fallback so we know nothing useful was found.
[ -z "$serial" ] && serial="UNK_SERIAL"


(
  echo "# Smoothwall Express persistent device names"
  echo
  echo "# Auto-generated by installation program: `date`"
  
  echo "# hard drive's symlink"
  echo "SUBSYSTEM==\"block\",KERNEL==\"[hs]d*|cciss*\",ENV{DEVTYPE}==\"disk\",ENV{ID_SERIAL_SHORT}==\"${serial}\", SYMLINK+=\"harddisk\""
  echo "SUBSYSTEM==\"block\",KERNEL==\"[hs]d*|cciss*\",ENV{DEVTYPE}==\"partition\",ENV{ID_SERIAL_SHORT}==\"${serial}\", SYMLINK+=\"harddisk%n\""
  echo "SUBSYSTEM==\"block\",KERNEL==\"vd*\",ENV{DEVTYPE}==\"disk\",ENV{ID_SERIAL}==\"${serial}\", SYMLINK+=\"harddisk\""
  echo "SUBSYSTEM==\"block\",KERNEL==\"vd*\",ENV{DEVTYPE}==\"partition\",ENV{ID_SERIAL}==\"${serial}\", SYMLINK+=\"harddisk%n\""
  echo "SUBSYSTEM==\"block\",ENV{ID_BUS}==\"scsi\",KERNEL==\"sd*\",ENV{DEVTYPE}==\"disk\",ENV{ID_SERIAL_SHORT}==\"\",ENV{ID_SCSI}==\"${serial}\", SYMLINK+=\"harddisk\""
  echo "SUBSYSTEM==\"block\",ENV{ID_BUS}==\"scsi\",KERNEL==\"sd*\",ENV{DEVTYPE}==\"partition\",ENV{ID_SERIAL_SHORT}==\"\",ENV{ID_SCSI}==\"${serial}\", SYMLINK+=\"harddisk%n\""
  echo
  echo "# sdcard symlink"
  echo "SUBSYSTEM==\"block\",KERNEL==\"mmcblk*\", SUBSYSTEMS==\"mmc\",ENV{DEVTYPE}==\"disk\",ENV{ID_SERIAL}==\"${serial}\", SYMLINK+=\"harddisk\""
  echo "SUBSYSTEM==\"block\",KERNEL==\"mmcblk*\", SUBSYSTEMS==\"mmc\",ENV{DEVTYPE}==\"partition\",ENV{ID_SERIAL}==\"${serial}\", SYMLINK+=\"harddisk%n\""
  echo
  
) > $2/etc/udev/rules.d/70-Smoothwall-custom-disk.rules

exit 0
